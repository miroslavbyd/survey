@using ankiety.Models

@model IEnumerable<ContainerModel>
<div>
    <div>
        @foreach (var Container in Model)
        {
            @Html.DisplayFor(modelContainer => Container.Id)
            <br>
            @Html.DisplayFor(modelContainer => Container.Description)
            <br>
            @Html.DisplayFor(modelContainer => Container.questionModel)
            <br>
            @Html.DisplayFor(modelContainer => Container.SurveyId)
            <br>
            @Html.ActionLink("Edit", "Edit", new { id = Container.Id})
            @Html.ActionLink("Delete", "Delete", new { id = Container.Id})
            <br>
            <br>
            <div>
                @*@await Component.InvokeAsync("Questions",Container.Id);*@
            </div>
        }
    </div>
    <div>
        
        @*@Html.ActionLink("Add", "Add", new {})
        <div class="form-group">
            @Html.LabelFor(model => model.Append, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id)
                @Html.ValidationMessageFor(model => model.Id)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id)
                @Html.ValidationMessageFor(model => model.Id)
            </div>
        </div>*@

    </div>
    
</div>