@using ankiety.Models

@model IEnumerable<QuestionModel>
<div style="border: 5px  solid navy; padding:2px; margin:2px">
    <div>
        <h4>Questions</h4>
        @foreach (var Question in Model)
        {
            <div class="form-horizontal" style="border: 2px  solid navy; padding:2px; margin:2px">
                @using (Html.BeginForm(null, "Question", new { questionId = Question.Id }, FormMethod.Post))
                {
                    <div>
                        <div class="form-group">
                            @Html.LabelFor(modelQuestion => Question.Id, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(modelQuestion => Question.Id)
                                @Html.ValidationMessageFor(modelQuestion => Question.Id)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(modelQuestion => Question.Description, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(modelQuestion => Question.Description)
                                @Html.ValidationMessageFor(modelQuestion => Question.Description)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(modelQuestion => Question.TypeQuestionId, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(modelQuestion => Question.TypeQuestionId)
                                @Html.ValidationMessageFor(modelQuestion => Question.TypeQuestionId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(modelQuestion => Question.ContainerId, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(modelQuestion => Question.ContainerId)
                                @Html.ValidationMessageFor(modelQuestion => Question.ContainerId)
                            </div>
                        </div>
                        @*Batton*@
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary">Edit</button>
                                <button type="submit" class="btn btn-primary" formaction="@Url.Action("Delete", "Question")">Delete Question</button>
                            </div>
                        </div>
                    </div>
                }
                @await Component.InvokeAsync("Answers",new { 
                    QuestionId =  Question.Id,
                    Function = "GetAllId"  })
                @await Component.InvokeAsync("Answers",new { 
                    QuestionId =  Question.Id,
                    Function = "Add"  })
            </div>
        }
    </div>
</div>